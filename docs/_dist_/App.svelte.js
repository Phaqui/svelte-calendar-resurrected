import './App.svelte.css.proxy.js';
/* src/App.svelte generated by Svelte v3.41.0 */
import {
	SvelteComponent,
	add_flush_callback,
	append,
	attr,
	bind,
	binding_callbacks,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	set_data,
	space,
	text,
	transition_in,
	transition_out
} from "../_snowpack/pkg/svelte/internal.js";

import hljs from '../_snowpack/pkg/highlightjs.js';
import Datepicker from './Components/Datepicker.svelte.js';
import { onMount } from '../_snowpack/pkg/svelte.js';

function create_else_block(ctx) {
	let t;

	return {
		c() {
			t = text("Pick a date");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (202:20) {#if dateChosen}
function create_if_block(ctx) {
	let t0;
	let t1;

	return {
		c() {
			t0 = text("Chosen: ");
			t1 = text(/*formattedSelected*/ ctx[0]);
		},
		m(target, anchor) {
			insert(target, t0, anchor);
			insert(target, t1, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*formattedSelected*/ 1) set_data(t1, /*formattedSelected*/ ctx[0]);
		},
		d(detaching) {
			if (detaching) detach(t0);
			if (detaching) detach(t1);
		}
	};
}

// (200:12) <Datepicker format={dateFormat} bind:formattedSelected bind:dateChosen>
function create_default_slot(ctx) {
	let button;

	function select_block_type(ctx, dirty) {
		if (/*dateChosen*/ ctx[1]) return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type(ctx);

	return {
		c() {
			button = element("button");
			if_block.c();
			attr(button, "class", "custom-button svelte-dpmbr4");
		},
		m(target, anchor) {
			insert(target, button, anchor);
			if_block.m(button, null);
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(button, null);
				}
			}
		},
		d(detaching) {
			if (detaching) detach(button);
			if_block.d();
		}
	};
}

function create_fragment(ctx) {
	let h1;
	let t1;
	let blockquote;
	let t5;
	let div24;
	let h20;
	let t7;
	let p0;
	let t9;
	let div2;
	let div0;
	let t11;
	let div1;
	let datepicker0;
	let t12;
	let h21;
	let t14;
	let p1;
	let t16;
	let h22;
	let t18;
	let p2;
	let t20;
	let ul0;
	let t34;
	let h23;
	let t36;
	let h40;
	let t38;
	let p3;
	let t40;
	let p4;
	let t49;
	let div5;
	let div3;
	let t51;
	let div4;
	let datepicker1;
	let t52;
	let h41;
	let t54;
	let p5;
	let t56;
	let div8;
	let div6;
	let t58;
	let div7;
	let datepicker2;
	let updating_formattedSelected;
	let updating_dateChosen;
	let t59;
	let h42;
	let t61;
	let p6;
	let t63;
	let div11;
	let div9;
	let t65;
	let div10;
	let datepicker3;
	let t66;
	let h43;
	let t68;
	let p7;
	let t72;
	let div14;
	let div12;
	let t74;
	let div13;
	let datepicker4;
	let t75;
	let h24;
	let t77;
	let h44;
	let t79;
	let p8;
	let t85;
	let div15;
	let datepicker5;
	let t86;
	let p9;
	let t88;
	let h45;
	let t90;
	let p10;
	let t92;
	let div16;
	let datepicker6;
	let t93;
	let h46;
	let t95;
	let p11;
	let t97;
	let div17;
	let datepicker7;
	let t98;
	let h25;
	let t100;
	let h47;
	let t102;
	let p12;
	let t108;
	let div20;
	let div18;
	let t110;
	let div19;
	let datepicker8;
	let t111;
	let h48;
	let t113;
	let p13;
	let t117;
	let div23;
	let div21;
	let t119;
	let div22;
	let datepicker9;
	let t120;
	let h26;
	let t122;
	let ul1;
	let current;
	datepicker0 = new Datepicker({});

	datepicker1 = new Datepicker({
			props: {
				format: dateFormat,
				buttonBackgroundColor: "#e20074",
				buttonTextColor: "white"
			}
		});

	function datepicker2_formattedSelected_binding(value) {
		/*datepicker2_formattedSelected_binding*/ ctx[8](value);
	}

	function datepicker2_dateChosen_binding(value) {
		/*datepicker2_dateChosen_binding*/ ctx[9](value);
	}

	let datepicker2_props = {
		format: dateFormat,
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	};

	if (/*formattedSelected*/ ctx[0] !== void 0) {
		datepicker2_props.formattedSelected = /*formattedSelected*/ ctx[0];
	}

	if (/*dateChosen*/ ctx[1] !== void 0) {
		datepicker2_props.dateChosen = /*dateChosen*/ ctx[1];
	}

	datepicker2 = new Datepicker({ props: datepicker2_props });
	binding_callbacks.push(() => bind(datepicker2, 'formattedSelected', datepicker2_formattedSelected_binding));
	binding_callbacks.push(() => bind(datepicker2, 'dateChosen', datepicker2_dateChosen_binding));

	datepicker3 = new Datepicker({
			props: {
				format: dateFormat,
				buttonBackgroundColor: "#e20074",
				buttonTextColor: "white",
				highlightColor: "#e20074",
				dayBackgroundColor: "#374b5e",
				dayTextColor: "#fff",
				dayBorderColor: "#5f75ce",
				dayHighlightedBackgroundColor: "#d93856",
				dayHighlightedTextColor: "#fff",
				backgroundColor: "#2a3048",
				textColor: "#fff"
			}
		});

	datepicker4 = new Datepicker({ props: { alwaysOpen: true } });

	datepicker5 = new Datepicker({
			props: {
				format: dateFormat,
				start: /*threeDaysInPast*/ ctx[2],
				end: /*inThirtyDays*/ ctx[4],
				selectableCallback: /*noWeekendsSelectableCallback*/ ctx[5]
			}
		});

	datepicker6 = new Datepicker({
			props: {
				format: dateFormat,
				start: /*tomorrow*/ ctx[3],
				end: /*inThirtyDays*/ ctx[4],
				selectableCallback: /*noWeekendsSelectableCallback*/ ctx[5]
			}
		});

	datepicker7 = new Datepicker({ props: { format: dateFormat } });
	datepicker7.$on("dateSelected", /*dateSelected_handler*/ ctx[10]);

	datepicker8 = new Datepicker({
			props: {
				daysOfWeek: /*spanishDaysOfWeek*/ ctx[6],
				monthsOfYear: /*spanishMonthsOfYear*/ ctx[7],
				format: dateFormat
			}
		});

	datepicker9 = new Datepicker({
			props: { weekStart: 1, format: dateFormat }
		});

	return {
		c() {
			h1 = element("h1");
			h1.textContent = "svelte-calendar-resurrected";
			t1 = space();
			blockquote = element("blockquote");

			blockquote.innerHTML = `This is a fork of
    <a href="https://github.com/6eDesign/svelte-calendar/issues">6eDesign/svelte-calendar</a>. A great project, but it seems pretty dead. Hence this fork. If upstream comes back alive, I&#39;d
  be happy to help merge back the changes.`;

			t5 = space();
			div24 = element("div");
			h20 = element("h2");
			h20.textContent = "Base demo";
			t7 = space();
			p0 = element("p");
			p0.textContent = "svelte-calendar-resurrected is a simple and lightweight date picker written in Svelte. Here's the most basic example:";
			t9 = space();
			div2 = element("div");
			div0 = element("div");

			div0.innerHTML = `<pre class="svelte-dpmbr4"><code class="html svelte-dpmbr4">&lt;script&gt;
  import Datepicker from &#39;svelte-calendar&#39;;
&lt;/script&gt;

&lt;Datepicker /&gt;</code></pre>`;

			t11 = space();
			div1 = element("div");
			create_component(datepicker0.$$.fragment);
			t12 = space();
			h21 = element("h2");
			h21.textContent = "Installation";
			t14 = space();
			p1 = element("p");
			p1.textContent = "npm i -D svelte-calendar";
			t16 = space();
			h22 = element("h2");
			h22.textContent = "Features";
			t18 = space();
			p2 = element("p");
			p2.textContent = "This component can be used with or without the Svelte compiler.";
			t20 = space();
			ul0 = element("ul");

			ul0.innerHTML = `<li>Lightweight (~8KB)</li> 
		<li>IE11+ Compatible</li> 
		<li>Usable as a Svelte component</li> 
		<li>Usable with Vanilla JS / &lt;Your Framework Here&gt;</li> 
		<li>Can be compiled to a native web component / custom element</li> 
		<li>Mobile/thumb friendly</li> 
		<li>Keyboard navigation (arrows, pgup/pgdown, tab, esc)</li>`;

			t34 = space();
			h23 = element("h2");
			h23.textContent = "Usage (appearance)";
			t36 = space();
			h40 = element("h4");
			h40.textContent = "Button appearance";
			t38 = space();
			p3 = element("p");
			p3.textContent = "By default, the component creates a button with the selected date as it's text, written in the some default date format. Clicking on this button triggers the date picker.";
			t40 = space();
			p4 = element("p");

			p4.innerHTML = `Change the appearance of the default trigger button by using the props
        <b>buttonBackgroundColor</b>, <b>buttonTextColor</b>.<br/>
        The date format is controlled by the <b>format</b> prop. Note: The date
        format string uses curly braces to do substitution of fields. Therefore,
        you cannot write the date format directly as a string attribute on the
        component, because svelte would try to do it&#39;s replacements instead.`;

			t49 = space();
			div5 = element("div");
			div3 = element("div");

			div3.innerHTML = `<pre class="svelte-dpmbr4"><code class="html svelte-dpmbr4">&lt;script&gt;
  import Datepicker from &#39;svelte-calendar&#39;;
  let dateFormat = &quot;#{l}, #{F} #{j}, #{Y}&quot;;
&lt;/script&gt;

&lt;Datepicker
  format={dateFormat}
  buttonBackgroundColor=&quot;#e20074&quot;
  buttonTextColor=&quot;white&quot;
/&gt;</code></pre>`;

			t51 = space();
			div4 = element("div");
			create_component(datepicker1.$$.fragment);
			t52 = space();
			h41 = element("h4");
			h41.textContent = "Custom button (or other element)";
			t54 = space();
			p5 = element("p");
			p5.textContent = "You can provide your completely own trigger button instead of the\n        default one. Simply insert a button element inside of the component markup. It doesn't even have to be a button element, but could be any element you want. That element will in any case still be used as the trigger to open the date picker.";
			t56 = space();
			div8 = element("div");
			div6 = element("div");

			div6.innerHTML = `<pre class="svelte-dpmbr4"><code class="html svelte-dpmbr4">&lt;script&gt;
  import Datepicker from &#39;svelte-calendar&#39;;
  let dateFormat = &quot;#{l}, #{F} #{j}, #{Y}&quot;;
&lt;/script&gt;

&lt;Datepicker
  format={dateFormat}
  bind:formattedSelected
  bind:dateChosen
&gt;
  &lt;button class=&#39;custom-button&#39;&gt;
    {#if {dateChosen}
      Chosen: {formattedSelected}
    {:else}
      Pick a date
    {/if}
  &lt;/button&gt;
&lt;/Datepicker&gt;</code></pre>`;

			t58 = space();
			div7 = element("div");
			create_component(datepicker2.$$.fragment);
			t59 = space();
			h42 = element("h4");
			h42.textContent = "Colorize the datepicker itself";
			t61 = space();
			p6 = element("p");
			p6.textContent = "There are numerous props to choose the colors of the datepicker itself. An example tells you more than a thousand words:";
			t63 = space();
			div11 = element("div");
			div9 = element("div");

			div9.innerHTML = `<pre class="svelte-dpmbr4"><code class="html svelte-dpmbr4">&lt;Datepicker
  format={dateFormat}
  buttonBackgroundColor=&#39;#e20074&#39;
  buttonTextColor=&#39;white&#39;
  highlightColor=&#39;#e20074&#39;
  dayBackgroundColor=&#39;#374b5e&#39;
  dayTextColor=&#39;#fff&#39;
  dayBorderColor=&#39;#5f75ce&#39;
  dayHighlightedBackgroundColor=&#39;#d93856&#39;
  dayHighlightedTextColor=&#39;#fff&#39;
  backgroundColor=&#39;#2a3048&#39;
  textColor=&#39;#fff&#39;
/&gt;</code></pre>`;

			t65 = space();
			div10 = element("div");
			create_component(datepicker3.$$.fragment);
			t66 = space();
			h43 = element("h4");
			h43.textContent = "Standalone";
			t68 = space();
			p7 = element("p");

			p7.innerHTML = `It&#39;s also possible to use the datepicker in \`alwaysOpen\` mode, which only
        draws the datepicker directly, and will also have it take up place in the DOM layout (by default, the datepicker will not take up layout space in the DOM layout when it&#39;s open). Simply add an <b>alwaysOpen</b> prop.`;

			t72 = space();
			div14 = element("div");
			div12 = element("div");
			div12.innerHTML = `<pre class="svelte-dpmbr4"><code class="html svelte-dpmbr4">&lt;Datepicker alwaysOpen /&gt;</code></pre>`;
			t74 = space();
			div13 = element("div");
			create_component(datepicker4.$$.fragment);
			t75 = space();
			h24 = element("h2");
			h24.textContent = "Usage (functionality)";
			t77 = space();
			h44 = element("h4");
			h44.textContent = "Date range";
			t79 = space();
			p8 = element("p");
			p8.innerHTML = `You can confine the date selection range with the <b>start</b> and <b>end</b> properties:`;
			t85 = space();
			div15 = element("div");
			create_component(datepicker5.$$.fragment);
			t86 = space();
			p9 = element("p");
			p9.textContent = "Note: The calendar will only generate dates up until the end date, so it is recommended to set this value to whatever is useful for you.";
			t88 = space();
			h45 = element("h4");
			h45.textContent = "Customize which dates are valid";
			t90 = space();
			p10 = element("p");
			p10.textContent = "You can also provide a `selectableCallback` prop which can be used to mark individual days between `start` and `end` as selectable.  This callback should accept a single date as an argument and return true (if selectable) or false (if unavailable).";
			t92 = space();
			div16 = element("div");
			create_component(datepicker6.$$.fragment);
			t93 = space();
			h46 = element("h4");
			h46.textContent = "Event: dateSelected";
			t95 = space();
			p11 = element("p");
			p11.textContent = "You can bind to the `dateSelected` event, which has a data property `date`:";
			t97 = space();
			div17 = element("div");
			create_component(datepicker7.$$.fragment);
			t98 = space();
			h25 = element("h2");
			h25.textContent = "Localization (a.k.a l10n)";
			t100 = space();
			h47 = element("h4");
			h47.textContent = "Custom day and months name";
			t102 = space();
			p12 = element("p");

			p12.innerHTML = `Customize the names of the days with the <b>daysOfWeek</b> prop, and
        customize the names of the months with the <b>monthsOfYear</b> prop.`;

			t108 = space();
			div20 = element("div");
			div18 = element("div");

			div18.innerHTML = `<pre class="svelte-dpmbr4"><code class="html svelte-dpmbr4">&lt;script&gt;
  let dateFormat = &quot;#{l}, #{F} #{j}, #{Y}&quot;;
  const spanishDaysOfWeek = [
    [ &#39;Domingo&#39;, &#39;Dom&#39; ],
    [ &#39;Lunes&#39;, &#39;Lun&#39; ],
    [ &#39;Martes&#39;, &#39;Mar&#39; ],
    [ &#39;Miércoles&#39;, &#39;Mié&#39; ],
    [ &#39;Jueves&#39;, &#39;Jue&#39; ],
    [ &#39;Viernes&#39;, &#39;Vie&#39; ],
    [ &#39;Sábado&#39;, &#39;Sáb&#39; ],
  ];
  const spanishMonthsOfYear = [
    [ &#39;Enero&#39;, &#39;Ene&#39; ],
    [ &#39;Febrero&#39;, &#39;Feb&#39; ],
    [ &#39;Marzo&#39;, &#39;Mar&#39; ],
    [ &#39;Abril&#39;, &#39;Abr&#39; ],
    [ &#39;Mayo&#39;, &#39;May&#39; ],
    [ &#39;Junio&#39;, &#39;Jun&#39; ],
    [ &#39;Julio&#39;, &#39;Jul&#39; ],
    [ &#39;Agosto&#39;, &#39;Ago&#39; ],
    [ &#39;Septiembre&#39;, &#39;Sep&#39; ],
    [ &#39;Octubre&#39;, &#39;Oct&#39; ],
    [ &#39;Noviembre&#39;, &#39;Nov&#39; ],
    [ &#39;Diciembre&#39;, &#39;Dic&#39; ],
  ];
&lt;/script&gt;

&lt;Datepicker
  daysOfWeek={spanishDaysOfWeek}
  monthsOfYear={spanishMonthsOfYear}
  format={dateFormat}
/&gt;</code></pre>`;

			t110 = space();
			div19 = element("div");
			create_component(datepicker8.$$.fragment);
			t111 = space();
			h48 = element("h4");
			h48.textContent = "Setting which day is the first day of the week";
			t113 = space();
			p13 = element("p");
			p13.innerHTML = `Not every country starts their weeks on Sundays. Use the <b>weekStart</b> prop to control which day of the week is considered the first. Sunday=0, Monday=1, ... Saturday=6`;
			t117 = space();
			div23 = element("div");
			div21 = element("div");
			div21.innerHTML = `<pre class="svelte-dpmbr4"><code class="html svelte-dpmbr4">&lt;Datepicker weekStart={1} format={dateFormat} /&gt;</code></pre>`;
			t119 = space();
			div22 = element("div");
			create_component(datepicker9.$$.fragment);
			t120 = space();
			h26 = element("h2");
			h26.textContent = "Changes from upstream";
			t122 = space();
			ul1 = element("ul");

			ul1.innerHTML = `<li>Changing the colors of the color picker (not just the button)</li> 
        <li>&quot;Standalone&quot; or &quot;always open&quot; mode (showing the date picker directly, instead of it being triggered by a button)</li> 
        <li>Can go further up from the year view, to a multi-year view</li>`;

			attr(h1, "class", "svelte-dpmbr4");
			attr(blockquote, "class", "svelte-dpmbr4");
			attr(div0, "class", "code svelte-dpmbr4");
			attr(div1, "class", "live svelte-dpmbr4");
			attr(div2, "class", "example svelte-dpmbr4");
			attr(div3, "class", "code svelte-dpmbr4");
			attr(div4, "class", "live svelte-dpmbr4");
			attr(div5, "class", "example svelte-dpmbr4");
			attr(div6, "class", "code svelte-dpmbr4");
			attr(div7, "class", "live svelte-dpmbr4");
			attr(div8, "class", "example svelte-dpmbr4");
			attr(div9, "class", "code svelte-dpmbr4");
			attr(div10, "class", "live svelte-dpmbr4");
			attr(div11, "class", "example svelte-dpmbr4");
			attr(div12, "class", "code svelte-dpmbr4");
			attr(div13, "class", "live svelte-dpmbr4");
			attr(div14, "class", "example svelte-dpmbr4");
			attr(div15, "class", "text-center svelte-dpmbr4");
			attr(p9, "class", "note svelte-dpmbr4");
			attr(div16, "class", "text-center svelte-dpmbr4");
			attr(div17, "class", "text-center svelte-dpmbr4");
			attr(div18, "class", "code svelte-dpmbr4");
			attr(div19, "class", "live svelte-dpmbr4");
			attr(div20, "class", "example svelte-dpmbr4");
			attr(div21, "class", "code svelte-dpmbr4");
			attr(div22, "class", "live svelte-dpmbr4");
			attr(div23, "class", "example svelte-dpmbr4");
			attr(div24, "class", "container svelte-dpmbr4");
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, blockquote, anchor);
			insert(target, t5, anchor);
			insert(target, div24, anchor);
			append(div24, h20);
			append(div24, t7);
			append(div24, p0);
			append(div24, t9);
			append(div24, div2);
			append(div2, div0);
			append(div2, t11);
			append(div2, div1);
			mount_component(datepicker0, div1, null);
			append(div24, t12);
			append(div24, h21);
			append(div24, t14);
			append(div24, p1);
			append(div24, t16);
			append(div24, h22);
			append(div24, t18);
			append(div24, p2);
			append(div24, t20);
			append(div24, ul0);
			append(div24, t34);
			append(div24, h23);
			append(div24, t36);
			append(div24, h40);
			append(div24, t38);
			append(div24, p3);
			append(div24, t40);
			append(div24, p4);
			append(div24, t49);
			append(div24, div5);
			append(div5, div3);
			append(div5, t51);
			append(div5, div4);
			mount_component(datepicker1, div4, null);
			append(div24, t52);
			append(div24, h41);
			append(div24, t54);
			append(div24, p5);
			append(div24, t56);
			append(div24, div8);
			append(div8, div6);
			append(div8, t58);
			append(div8, div7);
			mount_component(datepicker2, div7, null);
			append(div24, t59);
			append(div24, h42);
			append(div24, t61);
			append(div24, p6);
			append(div24, t63);
			append(div24, div11);
			append(div11, div9);
			append(div11, t65);
			append(div11, div10);
			mount_component(datepicker3, div10, null);
			append(div24, t66);
			append(div24, h43);
			append(div24, t68);
			append(div24, p7);
			append(div24, t72);
			append(div24, div14);
			append(div14, div12);
			append(div14, t74);
			append(div14, div13);
			mount_component(datepicker4, div13, null);
			append(div24, t75);
			append(div24, h24);
			append(div24, t77);
			append(div24, h44);
			append(div24, t79);
			append(div24, p8);
			append(div24, t85);
			append(div24, div15);
			mount_component(datepicker5, div15, null);
			append(div24, t86);
			append(div24, p9);
			append(div24, t88);
			append(div24, h45);
			append(div24, t90);
			append(div24, p10);
			append(div24, t92);
			append(div24, div16);
			mount_component(datepicker6, div16, null);
			append(div24, t93);
			append(div24, h46);
			append(div24, t95);
			append(div24, p11);
			append(div24, t97);
			append(div24, div17);
			mount_component(datepicker7, div17, null);
			append(div24, t98);
			append(div24, h25);
			append(div24, t100);
			append(div24, h47);
			append(div24, t102);
			append(div24, p12);
			append(div24, t108);
			append(div24, div20);
			append(div20, div18);
			append(div20, t110);
			append(div20, div19);
			mount_component(datepicker8, div19, null);
			append(div24, t111);
			append(div24, h48);
			append(div24, t113);
			append(div24, p13);
			append(div24, t117);
			append(div24, div23);
			append(div23, div21);
			append(div23, t119);
			append(div23, div22);
			mount_component(datepicker9, div22, null);
			append(div24, t120);
			append(div24, h26);
			append(div24, t122);
			append(div24, ul1);
			current = true;
		},
		p(ctx, [dirty]) {
			const datepicker2_changes = {};

			if (dirty & /*$$scope, formattedSelected, dateChosen*/ 16387) {
				datepicker2_changes.$$scope = { dirty, ctx };
			}

			if (!updating_formattedSelected && dirty & /*formattedSelected*/ 1) {
				updating_formattedSelected = true;
				datepicker2_changes.formattedSelected = /*formattedSelected*/ ctx[0];
				add_flush_callback(() => updating_formattedSelected = false);
			}

			if (!updating_dateChosen && dirty & /*dateChosen*/ 2) {
				updating_dateChosen = true;
				datepicker2_changes.dateChosen = /*dateChosen*/ ctx[1];
				add_flush_callback(() => updating_dateChosen = false);
			}

			datepicker2.$set(datepicker2_changes);
			const datepicker5_changes = {};
			if (dirty & /*threeDaysInPast*/ 4) datepicker5_changes.start = /*threeDaysInPast*/ ctx[2];
			if (dirty & /*inThirtyDays*/ 16) datepicker5_changes.end = /*inThirtyDays*/ ctx[4];
			datepicker5.$set(datepicker5_changes);
			const datepicker6_changes = {};
			if (dirty & /*tomorrow*/ 8) datepicker6_changes.start = /*tomorrow*/ ctx[3];
			if (dirty & /*inThirtyDays*/ 16) datepicker6_changes.end = /*inThirtyDays*/ ctx[4];
			datepicker6.$set(datepicker6_changes);
		},
		i(local) {
			if (current) return;
			transition_in(datepicker0.$$.fragment, local);
			transition_in(datepicker1.$$.fragment, local);
			transition_in(datepicker2.$$.fragment, local);
			transition_in(datepicker3.$$.fragment, local);
			transition_in(datepicker4.$$.fragment, local);
			transition_in(datepicker5.$$.fragment, local);
			transition_in(datepicker6.$$.fragment, local);
			transition_in(datepicker7.$$.fragment, local);
			transition_in(datepicker8.$$.fragment, local);
			transition_in(datepicker9.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(datepicker0.$$.fragment, local);
			transition_out(datepicker1.$$.fragment, local);
			transition_out(datepicker2.$$.fragment, local);
			transition_out(datepicker3.$$.fragment, local);
			transition_out(datepicker4.$$.fragment, local);
			transition_out(datepicker5.$$.fragment, local);
			transition_out(datepicker6.$$.fragment, local);
			transition_out(datepicker7.$$.fragment, local);
			transition_out(datepicker8.$$.fragment, local);
			transition_out(datepicker9.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t1);
			if (detaching) detach(blockquote);
			if (detaching) detach(t5);
			if (detaching) detach(div24);
			destroy_component(datepicker0);
			destroy_component(datepicker1);
			destroy_component(datepicker2);
			destroy_component(datepicker3);
			destroy_component(datepicker4);
			destroy_component(datepicker5);
			destroy_component(datepicker6);
			destroy_component(datepicker7);
			destroy_component(datepicker8);
			destroy_component(datepicker9);
		}
	};
}

let dateFormat = "#{l}, #{F} #{j}, #{Y}";
let exampleFormatted = false;
let exampleChosen = false;

function logChoice(date) {
	// eslint-disable-next-line
	console.log(`User chose ${date}.`);
}

function instance($$self, $$props, $$invalidate) {
	let end;
	const today = new Date();
	let start = new Date();
	let noWeekendsSelectableCallback = date => date.getDay() !== 0 && date.getDay() !== 6;
	let formattedSelected;
	let dateChosen = false;
	let threeDaysInPast;
	let tomorrow;
	let inThirtyDays;

	onMount(() => {
		hljs.highlightAll();
	}); //hljs.initHighlightingOnLoad();

	const spanishDaysOfWeek = [
		['Domingo', 'Dom'],
		['Lunes', 'Lun'],
		['Martes', 'Mar'],
		['Miércoles', 'Mié'],
		['Jueves', 'Jue'],
		['Viernes', 'Vie'],
		['Sábado', 'Sáb']
	];

	const spanishMonthsOfYear = [
		['Enero', 'Ene'],
		['Febrero', 'Feb'],
		['Marzo', 'Mar'],
		['Abril', 'Abr'],
		['Mayo', 'May'],
		['Junio', 'Jun'],
		['Julio', 'Jul'],
		['Agosto', 'Ago'],
		['Septiembre', 'Sep'],
		['Octubre', 'Oct'],
		['Noviembre', 'Nov'],
		['Diciembre', 'Dic']
	];

	function datepicker2_formattedSelected_binding(value) {
		formattedSelected = value;
		$$invalidate(0, formattedSelected);
	}

	function datepicker2_dateChosen_binding(value) {
		dateChosen = value;
		$$invalidate(1, dateChosen);
	}

	const dateSelected_handler = e => logChoice(e.detail.date);
	$: end = new Date(start.getTime() + 1000 * 3600 * 24 * 720);

	$: {
		const date = new Date(today);
		date.setDate(date.getDate() - 3);
		$$invalidate(2, threeDaysInPast = date);
	}

	$: {
		const date = new Date(today);
		date.setDate(date.getDate() + 1);
		$$invalidate(3, tomorrow = date);
	}

	$: {
		const date = new Date(start);
		date.setDate(date.getDate() + 30);
		$$invalidate(4, inThirtyDays = date);
	}

	return [
		formattedSelected,
		dateChosen,
		threeDaysInPast,
		tomorrow,
		inThirtyDays,
		noWeekendsSelectableCallback,
		spanishDaysOfWeek,
		spanishMonthsOfYear,
		datepicker2_formattedSelected_binding,
		datepicker2_dateChosen_binding,
		dateSelected_handler
	];
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default App;